# GO 编程基础四(常量的定义)

### 常量的定义
- 常量的值在编译的时候已经确定
- 常量的定义格式与变量基本相同
- 等号右侧必须是常量或者常量表达式
- 常量表达式中的函数必须是内置函数

三种定义方式
``` go 
const a int = 1
const b string = "A"

const (
  c = a
  d = a + 1
  e = a + 2
)

const a, b, c = 1, 2, 3
```

### 常量的初始化规则与枚举
- 在定义常量组时，如果不提供初始值，则表示将使用上行的表达式
- 使用相同的表达式不代表具有相同的值
- iota 是常量的计数器，从 0 开始，组中每定义 1 个常量自动递增 1
- 通过初始化规则和 iota 可以达到枚举的效果
- 每遇到一个 const 关键字，iota 就会重置为 0

### 运算符

位运算符
``` go 
/*
 6: 0110
11: 1011
-----------
&   0010 = 2,和运算符，两个是 1 为 1
| 1111 = 15,或运算符，一个是 1 为 1
^   1101 = 13,两个是 1 则为 0，一个 1 则为 1
&^  0100 = 4,第二个数的是 1，把第一个数强制改为 0
*/

func main() {
  fmt.Println(6 & 11)  // 2
  fmt.Println(6 | 11)  // 15
  fmt.Println(6 ^ 11)  // 13
  fmt.Println(6 &^ 11) // 4
}
```

通过 iota 和位运算符实现计算机存储单位的枚举
``` go
const (
  B float64 = 1 << (iota * 10)
  KB
  MB
  GB
  TB
  PB
  EB
  ZB
  YB
)

func main() {
  fmt.Println(B)
  fmt.Println(KB)
  fmt.Println(MB)
  fmt.Println(GB)
  fmt.Println(TB)
}

```